#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HOST_OS 1  // set to 1 for Linux, default is 0 (Windows) used in helper.h for defining compose key in unicode macro

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_34keys.h"
#include "../zmk-nodefree-config/international_chars/german.dtsi"

/* layer and key shortcuts */
// key codes can be found here: https://zmk.dev/docs/codes

// transparent key
#define ___ &trans

#define BASE 0  // layer shortcuts, must match order in which they are defined below
#define UML 1 // umlaute
#define NAV 2 // navigation
#define NUM 3 // numerical
#define SYMB 4 // symbols
#define BRC 5 // brackets []{}()<>
#define FUN 6 // F1..F12, bluetooth, media

/* custom behaviors */

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <500>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
)

// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €

// combos
#undef COMBO_TERM
#define COMBO_TERM 40  // timeout of 40ms (default is 30ms if omitted)
ZMK_COMBO(combo_capsword,  &caps_word,  LM1 RM1, BASE)  // f + j, capsWord active on base layer
ZMK_COMBO(combo_esc,  &kp ESC,  LM1 LM2, ALL)  // d + f, Escape active on all layers
ZMK_COMBO(combo_tab,  &kp TAB,  LM2 LM3, ALL)  // s + d, Tab active on all layers
ZMK_COMBO(combo_backspace,  &kp BSPC,  RM1 RM2, ALL)  // j + k, Backspace active on all layers
ZMK_COMBO(combo_return,  &kp RET,  RM2 RM3, ALL)  // k + l, Return active on all layers
ZMK_COMBO(combo_clear_bluetooth,  &bt BT_CLR,  RT0 RT4, FUN)  // y + p, clear all bluetooth profiles on function layer
ZMK_COMBO(combo_fun_layer,  &mo FUN,  RH0 RH1, BASE)  // RH0 + RH1, trigger FUN layer on base layer

/* keymaps */
ZMK_LAYER(base_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &hrm LGUI A   &hrm LALT S   &hrm LCTRL D  &hrm LSHFT F  &kp G             &lt BRC H     &hrm RSHFT J  &hrm RCTRL K  &hrm RALT L   &hrm RGUI SEMI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp Z         &kp X         &lt UML C     &kp V         &kp B             &kp N         &kp M        &lt UML COMMA  &kp DOT       &kp FSLH
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                   &lt SYMB TAB   &lt NAV RET      &lt NUM SPACE  &kp RSHFT
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(umlaut_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           &kp AT_SIGN   &euro_sign    &kp DOLLAR    ___               ___            &de_ue        ___           &de_oe       ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &de_ae        &de_eszett    ___           ___           ___               ___           ___           ___           ___           ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___           ___           ___           ___               ___           ___           ___           ___           ___
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    ___           ___               ___           ___
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(nav_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___           ___           ___           &kp END       &kp HOME          &kp BSPC      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___          &hrm LCTRL K_CUT  ___        ___               &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp DEL
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           &kp DEL       &kp K_COPY    &kp K_PASTE  ___               &kp HOME      &kp PG_DN     &kp PG_UP       &kp END     ___
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    ___           ___               ___           ___
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(num_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp BSLH      &kp N1        &kp N2        &kp N3        &kp PLUS         ___           ___              ___           ___           ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp SLASH     &kp N4        &kp N5        &kp N6        &kp MINUS        ___           ___              ___           ___           ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp STAR      &kp N7        &kp N8        &kp N9        &kp COMMA       ___           ___              ___           ___           ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
                                                    &kp N0        &kp EQUAL        ___           ___
     //                                           ╰─────────────┴─────────────╯    ╰─────────────┴─────────────╯
)

ZMK_LAYER(symbol_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          ___            ___          &kp AMPS      &kp STAR      ___               &kp UNDER     &kp EQUAL     &kp PLUS       &kp MINUS     &kp EXCL
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp LGUI      &kp LALT       &kp LCTRL     &kp LSHFT      ___              &kp TILDE     &kp SQT        &kp DQT        &kp GRAVE     &kp COLON
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          ___           ___           ___           ___           ___               &kp AT_SIGN   &kp HASH       &kp PRCNT      &kp CARET     &kp DOLLAR
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
                                                    ___           ___               ___           &kp SLASH
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(brackets_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp BSLH       &kp PIPE      ___           &kp HASH      &kp MINUS        ___            ___           ___           ___           ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp SLASH      &kp LBKT      &kp LBRC      &kp LPAR       &kp LT           ___          &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp STAR       &kp RBKT      &kp RBRC      &kp RPAR       &kp GT           ___           ___           ___           ___          ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
                                                    ___           &kp EQUAL          ___           ___
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(function_layer,
     // ╭─────────────┬──────────────┬────────────┬─────────────┬────────────╮   ╭──────────────┬──────────────┬───────────────┬──────────────┬─────────────╮
          &kp F11       &kp F1         &kp F2       &kp F3        ___              &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_SEL 4
     // ├─────────────┼──────────────┼────────────┼─────────────┼────────────┤   ├──────────────┼──────────────┼───────────────┼──────────────┼─────────────┤
          &kp F12       &kp F4         &kp F5       &kp F6        ___                ___          &kp RSHFT      &kp RCTRL       &kp RALT       &kp RGUI
     // ├─────────────┼──────────────┼────────────┼─────────────┼────────────┤   ├──────────────┼──────────────┼───────────────┼──────────────┼─────────────┤
           ___          &kp F7         &kp F8       &kp F9        ___              &kp C_MUTE     &kp C_VOL_UP   &kp C_VOL_DN    ___            &kp PSCRN
     // ╰─────────────┼──────────────┼────────────┼─────────────┼────────────┤   ├──────────────┼──────────────┼───────────────┼──────────────┼─────────────┤
                                                    &kp F10       ___               ___           ___
     //                                           ╰─────────────┴────────────╯   ╰──────────────┴──────────────╯
)